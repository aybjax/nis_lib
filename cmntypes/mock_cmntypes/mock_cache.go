// Code generated by MockGen. DO NOT EDIT.
// Source: ./cache.go

// Package mock_cmntypes is a generated GoMock package.
package mock_cmntypes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAppCache is a mock of AppCache interface.
type MockAppCache struct {
	ctrl     *gomock.Controller
	recorder *MockAppCacheMockRecorder
}

// MockAppCacheMockRecorder is the mock recorder for MockAppCache.
type MockAppCacheMockRecorder struct {
	mock *MockAppCache
}

// NewMockAppCache creates a new mock instance.
func NewMockAppCache(ctrl *gomock.Controller) *MockAppCache {
	mock := &MockAppCache{ctrl: ctrl}
	mock.recorder = &MockAppCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppCache) EXPECT() *MockAppCacheMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockAppCache) Delete(key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockAppCacheMockRecorder) Delete(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAppCache)(nil).Delete), key)
}

// Get mocks base method.
func (m *MockAppCache) Get(key string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAppCacheMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAppCache)(nil).Get), key)
}

// Set mocks base method.
func (m *MockAppCache) Set(key string, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", key, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockAppCacheMockRecorder) Set(key, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockAppCache)(nil).Set), key, data)
}
